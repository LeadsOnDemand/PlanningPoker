buildscript {
    dependencies {
        classpath 'org.hibernate.build.gradle:gradle-maven-publish-auth:2.0.1'
        classpath 'net.linguica.gradle:maven-settings-plugin:0.5'
    }
}

plugins {
    id 'java'
    id 'maven'
    id 'org.springframework.boot' version '1.5.2.RELEASE'
    id 'org.sonarqube' version '2.5'
}

apply plugin: 'maven-publish'
apply plugin: 'maven-publish-auth'
apply plugin: 'net.linguica.maven-settings'

group 'com.anigenero.sandbox'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'maven'

    group = group
    version = version

    repositories {
        mavenCentral()
        maven {
            url 'http://jaspersoft.artifactoryonline.com/jaspersoft/third-party-ce-artifacts/'
        }
    }

    dependencies {
        testCompile group: 'junit', name: 'junit', version: '4.+'
        testCompile group: 'org.mockito', name: 'mockito-core', version: '2.7.+'
        testCompile group: 'org.assertj', name: 'assertj-core', version: '3.8.+'
    }

    sonarqube {
        properties {
            property "sonar.junit.reportPath", file("$buildDir/jacoco")
        }
    }

    buildscript {

        jacoco {
            toolVersion = '0.7.6.201602180812'
        }

        test {
            jacoco {
                excludes = ['**/Test*']
                append = false
                destinationFile = file("$buildDir/jacoco/jacoco.exec")
                classDumpDir = file("$buildDir/jacoco/classpathdumps")
            }
        }

        jacocoTestReport {
            reports {
                xml.enabled false
                csv.enabled false
                html.destination "${buildDir}/jacoco/html"
            }
        }

        jacocoTestCoverageVerification {
            violationRules {
                rule {
                    limit {
                        minimum = 0.8
                    }
                }
            }
        }

    }

}

ext {

    jacksonVersion = '2.8.+'
    jerseyExtVersion = '2.25.1'
    hibernateVersion = '5.2.10.Final'
    log4jVersion = '2.8.+'
    mapstructVersion = '1.1.0.Final'
    springVersion = '4.3.11.RELEASE'
    springBootVersion = '1.5.3.RELEASE'
    swaggerVersion = '1.5.13'

    assertJVersion = '3.8.+'
    easymockVersion = '3.4'
    junitVersion = '4.+'
    mockitoVersion = '2.7.22'

}

dependencies {

    compile project(':poker-core')

    // logging
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: log4jVersion
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: log4jVersion
    compile group: 'org.apache.logging.log4j', name: 'log4j-web', version: log4jVersion
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'com.lmax', name: 'disruptor', version: '3.3.6'

    // logging for hibernate
    compile group: 'org.jboss.logging', name: 'jboss-logging', version: '3.3.1.Final'
    compile group: 'org.aspectj', name: 'aspectjweaver', version: '1.8.10'

    // need this for log4j2.yaml
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: jacksonVersion

    // these have to be here because of a dependency issue that overrides the dependency versions
    // not sure why it happens
    compile group: 'org.hibernate', name: 'hibernate-core', version: hibernateVersion
    compile group: 'org.hibernate', name: 'hibernate-java8', version: hibernateVersion
    compile group: 'org.hibernate', name: 'hibernate-validator', version: '5.4.1.Final'

    // for HTTP/2 requests
    compile group: 'org.mortbay.jetty.alpn', name: 'alpn-boot', version: '8.1.11.v20170118'

    // spring boot framework
    compile group: 'org.springframework', name: 'spring-core', version: springVersion
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-undertow', version: springBootVersion
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2', version: springBootVersion
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springBootVersion) {
        exclude module: 'spring-boot-starter-tomcat'
        exclude module: 'spring-boot-starter-logging'
        exclude group: 'org.hibernate'
    }

}

bootRepackage {
    mainClass = 'com.anigenero.sandbox.poker.PlanningPokerApplication'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}
